name: Deploy FastFood API

on:
  push:
    branches:
      - master  # Executa o pipeline apenas na branch master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'  # Agora está configurado para Java 21
          distribution: 'temurin'

      - name: Build com Maven
        run: mvn clean install -DskipTests  # Compila o projeto e cria o JAR

      - name: Login no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Construir e enviar imagem para Docker Hub
        run: |
          VERSION=$(date +%s)  # Usa timestamp como versão da imagem
          docker build -t rm359211/fastfood-app:$VERSION .  # Build da imagem Docker
          docker push rm359211/fastfood-app:$VERSION       # Push para o Docker Hub
          echo "IMAGE_VERSION=$VERSION" >> $GITHUB_ENV  # Salva a versão da imagem no ambiente do GitHub

      - name: Conectar à EC2 e rodar os comandos do Kubernetes
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Clonar ou atualizar o repositório
            if [ ! -d "/home/ubuntu/fastfood-repo" ]; then
              echo "Repositório não encontrado, fazendo clone..."
              git   clone https://github.com/bmatheusm/tech-challenge-fastfood.git  /home/ubuntu/fastfood-repo
            else
              echo "Repositório encontrado, fazendo pull..."
              cd /home/ubuntu/fastfood-repo && git pull origin master
            fi

            # Iniciar Minikube se necessário
            if ! minikube status | grep -q "Running"; then
              echo "Iniciando Minikube..."
              minikube start
            fi

            # Configurar o kubectl para usar o contexto Minikube
            if [[ "$(kubectl config current-context)" != "minikube" ]]; then
              kubectl config use-context minikube
            fi

            # Aplicar as configurações do Kubernetes
            echo "Aplicando configurações do Kubernetes..."
            cd /home/ubuntu/fastfood-repo
            kubectl apply -f k8s-infra/env/secret.yaml
            kubectl apply -f k8s-infra/env/configmap.yaml
            kubectl apply -f k8s-infra/db/postgresdb-statefulset.yaml
            kubectl apply -f k8s-infra/db/postgresdb-service.yaml
            kubectl apply -f k8s-infra/fastfoodapi/fastfoodapi-deployment.yaml
            kubectl apply -f k8s-infra/fastfoodapi/fastfoodapi-service.yaml
            kubectl apply -f k8s-infra/hpa/fastfoodapi-hpa.yaml